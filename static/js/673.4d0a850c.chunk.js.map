{"version":3,"file":"static/js/673.4d0a850c.chunk.js","mappings":"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","sources":["../../../modules/sales/dist/pages/Customers/constants.js","../../../modules/sales/dist/main/routes.js","../../../modules/sales/dist/pages/Customers/customersApi.js","../../../modules/sales/dist/pages/Customers/Manage/Manage.js","../../../modules/sales/dist/pages/Customers/Main/Main.js","../../../modules/sales/dist/pages/Customers/routes.js","../../../modules/sales/dist/main/Main.js"],"sourcesContent":["export const PAGE_ROUTE = 'customers';\nexport const PAGE_NAME = 'Customer';\n","import { templateFn } from '@igblsln/control';\nimport { MODULE_NAME } from '../constants';\nimport { PAGE_ROUTE } from '../pages/Customers/constants';\nconst salesTemplateFn = (page, isCommingSoon) => {\n    return templateFn(`/${MODULE_NAME}/${page}` + (isCommingSoon ? '/comming-soon' : ''));\n};\nconst routes = [\n    {\n        label: 'Transctions',\n        items: [\n            {\n                label: 'Sales Booking',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(\"salesbooking\", true)\n            },\n            {\n                label: 'Cancel Booking',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(\"cancelbooking\", true)\n            },\n            {\n                label: 'Invoice',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(\"invoice\", true)\n            },\n            {\n                label: 'Receipt',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(\"receipt\", true)\n            },\n            {\n                label: 'Receipt Allocation',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(\"receiptalloc\", true)\n            }\n        ]\n    },\n    {\n        label: 'Configuration',\n        items: [\n            {\n                label: 'Customer',\n                icon: 'pi ml-3',\n                template: salesTemplateFn(PAGE_ROUTE)\n            }\n        ]\n    }\n];\nexport default routes;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { api, PAGE_SIZE, tags, urlUtils } from '@igblsln/store';\nconst API_PATH = '/sale/customer/';\nexport const customerApi = api.injectEndpoints({\n    overrideExisting: false,\n    endpoints: (build) => ({\n        listCustomer: build.query({\n            query: ({ page, size }) => {\n                return {\n                    url: urlUtils(API_PATH, `?page=${page || 1}&page_size=${size || PAGE_SIZE}`),\n                };\n            },\n            providesTags: (result) => {\n                var _a;\n                return result ? [\n                    ...(_a = result === null || result === void 0 ? void 0 : result.results) === null || _a === void 0 ? void 0 : _a.map(({ id }) => ({ type: tags.CUSTOMER, id })),\n                    { type: tags.CUSTOMER, id: 'LIST' },\n                ] : [{ type: tags.CUSTOMER, id: 'LIST' }];\n            },\n        }),\n        addCustomer: build.mutation({\n            query: (body) => ({\n                url: API_PATH,\n                method: 'POST',\n                body,\n            }),\n            invalidatesTags: [{ type: tags.CUSTOMER, id: 'LIST' }],\n        }),\n        getCustomer: build.query({\n            query: (id) => `${API_PATH}${id}`,\n            providesTags: (_Customer, _err, id) => [{ type: tags.CUSTOMER, id }],\n        }),\n        updateCustomer: build.mutation({\n            query(data) {\n                const { key: id } = data, body = __rest(data, [\"key\"]);\n                return {\n                    url: `${API_PATH}${id}`,\n                    method: 'PUT',\n                    body,\n                };\n            },\n            invalidatesTags: (project) => [{ type: tags.CUSTOMER, id: project === null || project === void 0 ? void 0 : project.id }],\n        }),\n        getStates: build.query({\n            query: () => {\n                return {\n                    url: \"/geo/state/\",\n                };\n            },\n            providesTags: (result = []) => [\n                ...result.map(({ state_key: id }) => ({ type: tags.STATES, id })),\n                { type: tags.STATES, id: 'LIST' },\n            ],\n        }),\n        getCities: build.query({\n            query: (state) => {\n                return {\n                    url: `/geo/city/?state=${state}`,\n                };\n            },\n            providesTags: (result = []) => [\n                ...result.map(({ city_key: id }) => ({ type: tags.CITIES, id })),\n                { type: tags.CITIES, id: 'LIST' },\n            ],\n        }),\n        deleteCustomer: build.mutation({\n            query(id) {\n                return {\n                    url: `${API_PATH}${id}`,\n                    method: 'DELETE',\n                };\n            },\n            invalidatesTags: (project) => [{ type: tags.CUSTOMER, id: project === null || project === void 0 ? void 0 : project.id }],\n        }),\n        getErrorProne: build.query({\n            query: () => 'error-prone',\n        }),\n    }),\n});\nexport const { useAddCustomerMutation, useDeleteCustomerMutation, useGetCustomerQuery, useListCustomerQuery, useUpdateCustomerMutation, useGetErrorProneQuery, useGetCitiesQuery, useGetStatesQuery } = customerApi;\nexport const { endpoints: { getCustomer }, } = customerApi;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useRef, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Controller } from 'react-hook-form';\nimport { InputText } from 'primereact/inputtext';\nimport { classNames } from 'primereact/utils';\nimport { Toast } from 'primereact/toast';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ManageLayout, getFormErrorMessage } from '@igblsln/control';\nimport { useAddCustomerMutation, useGetCitiesQuery, useGetCustomerQuery, useGetStatesQuery, useUpdateCustomerMutation } from '../customersApi';\nimport { PAGE_NAME, PAGE_ROUTE } from '../constants';\nimport { MODULE_NAME } from '../../../constants';\nimport { AFTER_API_TIME } from '@igblsln/store';\nconst defaultProps = {\n    client_id: \"1001\",\n    company: \"TEST\"\n};\nconst Manage = (props) => {\n    const toast = useRef(null);\n    const [showingToast, setShowingToast] = useState(false);\n    const navigate = useNavigate();\n    const { id: idString } = useParams();\n    const id = parseInt(idString || '');\n    const isNew = isNaN(id) || id <= 0;\n    const [selectedState, setSelectedState] = useState('');\n    const { data, isLoading } = useGetCustomerQuery(id, {\n        skip: isNew\n    });\n    const { data: states } = useGetStatesQuery();\n    const { data: cities } = useGetCitiesQuery(selectedState);\n    const [addCustomer, { isLoading: isAdding }] = useAddCustomerMutation();\n    const [updateCustomer, { isLoading: isUpdating }] = useUpdateCustomerMutation();\n    const showSuccess = (title, msg) => {\n        var _a;\n        (_a = toast === null || toast === void 0 ? void 0 : toast.current) === null || _a === void 0 ? void 0 : _a.show({ severity: 'success', summary: title, detail: msg, life: 3000 });\n    };\n    const showError = (title, msg) => {\n        var _a;\n        (_a = toast === null || toast === void 0 ? void 0 : toast.current) === null || _a === void 0 ? void 0 : _a.show({ severity: 'error', summary: title, detail: msg, life: 3000 });\n    };\n    const onSubmit = (values) => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            let resp;\n            if (isNew) {\n                resp = yield addCustomer(Object.assign(Object.assign({}, values), defaultProps)).unwrap();\n            }\n            else {\n                resp = yield updateCustomer(Object.assign(Object.assign({}, values), defaultProps)).unwrap();\n            }\n            showSuccess('Success', resp.detail);\n            setShowingToast(true);\n            setTimeout(() => {\n                navigate(`/${MODULE_NAME}/${PAGE_ROUTE}`);\n            }, AFTER_API_TIME);\n        }\n        catch (_a) {\n            showError('An error occurred', \"We couldn't save your post, try again!\");\n        }\n    });\n    const customCityOption = [\n        {\n            label: 'Add',\n            items: cities || []\n        }\n    ];\n    const renderForm = (control, _register, errors) => {\n        var _a, _b, _c, _d;\n        return (React.createElement(\"div\", { className: 'pl-8' },\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"id\", className: classNames('col-2', { 'p-error': errors.id }) }, \"Customer ID*\"),\n                React.createElement(Controller, { name: \"id\", control: control, rules: { required: 'Item ID is required.', maxLength: { value: 25, message: \"max 25 Char\" } }, render: ({ field, fieldState }) => (React.createElement(InputText, Object.assign({ disabled: !isNew, id: field.name }, field, { className: classNames({ 'p-invalid': fieldState.invalid }) }))) }),\n                getFormErrorMessage((_a = errors === null || errors === void 0 ? void 0 : errors.id) === null || _a === void 0 ? void 0 : _a.message)),\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"name\", className: classNames('col-2', { 'p-error': errors.name }) }, \"Customer Name*\"),\n                React.createElement(Controller, { name: \"name\", control: control, rules: { required: 'Item Description is required.', maxLength: { value: 100, message: \"max 100 Char\" } }, render: ({ field, fieldState }) => (React.createElement(InputText, Object.assign({ style: { width: '40%' }, id: field.name }, field, { className: classNames({ 'p-invalid': fieldState.invalid }) }))) }),\n                getFormErrorMessage((_b = errors === null || errors === void 0 ? void 0 : errors.name) === null || _b === void 0 ? void 0 : _b.message)),\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"addr1\", className: classNames('col-2', { 'p-error': errors.addr1 }) }, \" Address Line 1\"),\n                React.createElement(Controller, { name: \"addr1\", control: control, rules: { maxLength: { value: 100, message: \"max 100 Char\" } }, render: ({ field, fieldState }) => (React.createElement(InputText, Object.assign({ id: field.name }, field, { style: { width: '50%' }, className: classNames({ 'p-invalid': fieldState.invalid }) }))) })),\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"addr2\", className: classNames('col-2', { 'p-error': errors.addr2 }) }, \" Address Line 2\"),\n                React.createElement(Controller, { name: \"addr2\", control: control, rules: { maxLength: { value: 100, message: \"max 100 Char\" } }, render: ({ field, fieldState }) => (React.createElement(InputText, Object.assign({ id: field.name }, field, { style: { width: '50%' }, className: classNames({ 'p-invalid': fieldState.invalid }) }))) })),\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"state_key\", className: classNames('col-2', { 'p-error': errors.state_key }) }, \"State*\"),\n                React.createElement(Controller, { name: \"state_key\", control: control, rules: { required: 'State is required.' }, render: ({ field, fieldState }) => (React.createElement(Dropdown, Object.assign({ id: field.name }, field, { style: { width: '30%' }, className: classNames({ 'p-invalid': fieldState.invalid }), onChange: (e) => {\n                            setSelectedState(e.value);\n                            field.onChange(e.value);\n                        }, optionLabel: \"name\", optionValue: \"key\", filter: true, filterBy: \"name\", options: states }))) }),\n                getFormErrorMessage((_c = errors === null || errors === void 0 ? void 0 : errors.state_key) === null || _c === void 0 ? void 0 : _c.message)),\n            React.createElement(\"div\", { className: \"field\" },\n                React.createElement(\"label\", { htmlFor: \"city_key\", className: classNames('col-2', { 'p-error': errors.descr }) }, \"City*\"),\n                React.createElement(Controller, { name: \"city_key\", control: control, rules: { required: 'City is required.' }, render: ({ field, fieldState }) => (React.createElement(Dropdown, Object.assign({ optionGroupTemplate: React.createElement(\"div\", { style: { cursor: 'pointer', textAlign: 'center', backgroundColor: 'lightgray' }, onClick: () => navigate('/projects/city') }, \"--Add And Edit--\"), id: field.name }, field, { style: { width: '30%' }, className: classNames({ 'p-invalid': fieldState.invalid }), optionValue: \"key\", optionGroupLabel: \"label\", optionLabel: \"name\", optionGroupChildren: \"items\", options: customCityOption }))) }),\n                getFormErrorMessage((_d = errors === null || errors === void 0 ? void 0 : errors.city_key) === null || _d === void 0 ? void 0 : _d.message))));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Toast, { ref: toast }),\n        React.createElement(ManageLayout, { baseRoute: `/${MODULE_NAME}/${PAGE_ROUTE}`, description: PAGE_NAME, id: id, data: data, isUpdating: isAdding || isUpdating || showingToast, isLoading: isLoading, onSubmit: onSubmit, renderForm: renderForm })));\n};\nexport default Manage;\n","import React from 'react';\nimport { ListLayout, Datacolumn } from '@igblsln/control';\nimport { useDeleteCustomerMutation, useListCustomerQuery } from '../customersApi';\nimport { MODULE_NAME } from '../../../constants';\nimport { PAGE_NAME, PAGE_ROUTE } from '../constants';\nconst Main = (props) => {\n    const { data, isLoading } = useListCustomerQuery({});\n    const [deleteDataAction, { isLoading: isDeleting }] = useDeleteCustomerMutation();\n    const deleteAction = (id) => deleteDataAction(id).unwrap();\n    return (React.createElement(ListLayout, { baseRoute: `/${MODULE_NAME}/${PAGE_ROUTE}`, description: PAGE_NAME, isLoading: isLoading || isDeleting, data: data === null || data === void 0 ? void 0 : data.results, deleteAction: deleteAction, newTable: true, showHeader: true },\n        React.createElement(Datacolumn, { field: \"id\", header: \"Customer ID\", filteringType: 'number' }),\n        React.createElement(Datacolumn, { field: \"name\", header: \"Customer Name\", filteringType: 'text' })));\n};\nexport default Main;\n","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport Manage from './Manage';\nimport Main from './Main';\nimport { PAGE_ROUTE } from './constants';\nconst ProjectRoutes = (React.createElement(Route, { path: PAGE_ROUTE },\n    React.createElement(Route, { path: \"new\", element: React.createElement(Manage, null) }),\n    React.createElement(Route, { path: \":id/edit\", element: React.createElement(Manage, null) }),\n    React.createElement(Route, { index: true, element: React.createElement(Main, null) })));\nexport default ProjectRoutes;\n","import React from 'react';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { ComingSoon, ModuleLayout, NoMatch } from '@igblsln/control';\nimport routes from './routes';\nimport CustomerRoutes from '../pages/Customers';\nimport { PAGE_ROUTE } from '../pages/Customers/constants';\nconst Main = () => {\n    return (React.createElement(Routes, null,\n        React.createElement(Route, { path: \"/\", element: React.createElement(ModuleLayout, { navItems: routes }) },\n            React.createElement(Route, { index: true, element: React.createElement(Navigate, { to: PAGE_ROUTE, replace: true }) }),\n            CustomerRoutes,\n            React.createElement(Route, { path: \":page/comming-soon\", element: React.createElement(ComingSoon, null) }),\n            React.createElement(Route, { path: \"*\", element: React.createElement(NoMatch, { relative: true }) }))));\n};\nexport default Main;\n"],"names":["PAGE_ROUTE","PAGE_NAME","salesTemplateFn","page","isCommingSoon","templateFn","MODULE_NAME","label","items","icon","template","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","API_PATH","customerApi","api","overrideExisting","endpoints","build","listCustomer","query","size","url","urlUtils","PAGE_SIZE","providesTags","result","_a","results","map","id","type","tags","addCustomer","mutation","body","method","invalidatesTags","getCustomer","_Customer","_err","updateCustomer","data","key","project","getStates","state_key","getCities","state","city_key","deleteCustomer","getErrorProne","useAddCustomerMutation","useDeleteCustomerMutation","useGetCustomerQuery","useListCustomerQuery","useUpdateCustomerMutation","useGetCitiesQuery","useGetErrorProneQuery","useGetStatesQuery","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","done","then","apply","defaultProps","client_id","company","props","toast","useRef","useState","showingToast","setShowingToast","navigate","useNavigate","idString","useParams","parseInt","isNew","isNaN","selectedState","setSelectedState","skip","isLoading","states","cities","isAdding","isUpdating","showSuccess","title","msg","current","show","severity","summary","detail","life","showError","customCityOption","React","Toast","ref","ManageLayout","baseRoute","description","onSubmit","values","assign","unwrap","resp","setTimeout","AFTER_API_TIME","renderForm","control","_register","errors","_b","_c","_d","className","htmlFor","classNames","Controller","name","rules","required","maxLength","message","render","field","fieldState","InputText","disabled","invalid","getFormErrorMessage","style","width","addr1","addr2","Dropdown","onChange","optionLabel","optionValue","filter","filterBy","options","descr","optionGroupTemplate","cursor","textAlign","backgroundColor","onClick","optionGroupLabel","optionGroupChildren","deleteDataAction","isDeleting","ListLayout","deleteAction","newTable","showHeader","Datacolumn","header","filteringType","Route","path","element","Manage","index","Main","Routes","ModuleLayout","navItems","routes","Navigate","to","replace","CustomerRoutes","ComingSoon","NoMatch","relative"],"sourceRoot":""}